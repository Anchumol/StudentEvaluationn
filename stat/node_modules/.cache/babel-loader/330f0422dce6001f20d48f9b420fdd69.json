{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digital\\\\Desktop\\\\accademic\\\\RESSTAT-main\\\\RESSTAT-main\\\\src\\\\components\\\\Nav\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useHistory } from 'react-router-dom';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport PersonIcon from '@mui/icons-material/Person';\nimport CloseIcon from '@mui/icons-material/Close';\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport ReplayIcon from '@mui/icons-material/Replay'; // import CalculateIcon from '@mui/icons-material/Calculate'\n\nimport Divider from '@mui/material/Divider';\nimport Tooltip from '@mui/material/Tooltip';\nimport { downloadConfigurationAsJSON } from '../../util/download';\nimport { useDispatch } from 'react-redux';\nimport { CLEAR_MY_MODEL } from '../../store/MyModelSlice';\nimport { CLEAR_RESULTS } from '../../store/MyDataSlice';\nimport { CLEAR_APP_DATA } from '../../store/AppDataSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavBar = ({\n  small = false\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [state, setState] = useState(false);\n  const toggleDrawer = useCallback(open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n    setState(open);\n  }, [setState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      size: small ? 'small' : 'medium',\n      onClick: toggleDrawer(true),\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: 'left',\n      open: state,\n      onClose: toggleDrawer(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 250\n        },\n        role: \"presentation\",\n        onClick: toggleDrawer(false),\n        onKeyDown: toggleDrawer(false),\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(IconButton, {\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), [{\n            text: 'My Data',\n            path: '/myData',\n            icon: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 39\n            }, this)\n          }, {\n            text: 'Report',\n            path: '/report',\n            icon: /*#__PURE__*/_jsxDEV(BarChartIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 39\n            }, this)\n          } // {\n          //     text: 'Calculation',\n          //     path: '/calculation',\n          //     icon: <CalculateIcon />,\n          // },\n          ].map(({\n            text,\n            path,\n            icon\n          }) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => history.push(path),\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavBar, \"zbaVbmM+8hB6Dwdl/OK4aOFh7ok=\", false, function () {\n  return [useHistory];\n});\n\n_c = NavBar;\n\nconst Nav = () => {\n  _s2();\n\n  const small = !useMediaQuery(theme => theme.breakpoints.up('sm'));\n  const dispatch = useDispatch();\n  const reset = useCallback(() => {\n    dispatch(CLEAR_MY_MODEL());\n    dispatch(CLEAR_RESULTS());\n    dispatch(CLEAR_APP_DATA());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        small\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: small ? 'h4' : 'h3',\n        sx: {\n          flexGrow: 1,\n          fontFamily: 'Monoton',\n          margin: small ? '10px' : '20px'\n        },\n        children: \"RESSTAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"left\",\n        title: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Download Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: small ? 'small' : 'large',\n          onClick: downloadConfigurationAsJSON,\n          children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        placement: \"left\",\n        title: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Clear Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: small ? 'small' : 'large',\n          onClick: reset,\n          children: /*#__PURE__*/_jsxDEV(ReplayIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(Nav, \"nW9eJ6eCDicRMBEH2Czyuq0S1po=\", false, function () {\n  return [useMediaQuery, useDispatch];\n});\n\n_c2 = Nav;\nexport default Nav;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"Nav\");","map":{"version":3,"sources":["C:/Users/Digital/Desktop/accademic/RESSTAT-main/RESSTAT-main/src/components/Nav/index.jsx"],"names":["useState","useCallback","AppBar","Box","Toolbar","Typography","IconButton","MenuIcon","useMediaQuery","useHistory","Drawer","List","ListItem","ListItemIcon","ListItemText","PersonIcon","CloseIcon","BarChartIcon","DownloadIcon","ReplayIcon","Divider","Tooltip","downloadConfigurationAsJSON","useDispatch","CLEAR_MY_MODEL","CLEAR_RESULTS","CLEAR_APP_DATA","NavBar","small","history","state","setState","toggleDrawer","open","event","type","key","width","text","path","icon","map","push","Nav","theme","breakpoints","up","dispatch","reset","flexGrow","fontFamily","margin"],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { useHistory } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport PersonIcon from '@mui/icons-material/Person'\nimport CloseIcon from '@mui/icons-material/Close'\nimport BarChartIcon from '@mui/icons-material/BarChart'\nimport DownloadIcon from '@mui/icons-material/Download'\nimport ReplayIcon from '@mui/icons-material/Replay'\n// import CalculateIcon from '@mui/icons-material/Calculate'\nimport Divider from '@mui/material/Divider'\nimport Tooltip from '@mui/material/Tooltip'\nimport { downloadConfigurationAsJSON } from '../../util/download'\nimport { useDispatch } from 'react-redux'\nimport { CLEAR_MY_MODEL } from '../../store/MyModelSlice'\nimport { CLEAR_RESULTS } from '../../store/MyDataSlice'\nimport { CLEAR_APP_DATA } from '../../store/AppDataSlice'\n\nconst NavBar = ({ small = false }) => {\n    const history = useHistory()\n    const [ state, setState ] = useState(false)\n\n    const toggleDrawer = useCallback(open => event => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\n            return\n        setState(open)\n    }, [ setState ])\n\n    return <>\n        <IconButton\n            size={ small ? 'small' : 'medium' }\n            onClick={ toggleDrawer(true) }\n        >\n            <MenuIcon />\n        </IconButton>\n        <Drawer\n            anchor={ 'left' }\n            open={ state }\n            onClose={ toggleDrawer(false) }\n        >\n            <Box\n                sx={ { width: 250 } }\n                role=\"presentation\"\n                onClick={ toggleDrawer(false) }\n                onKeyDown={ toggleDrawer(false) }\n            >\n                <List>\n                    <ListItem>\n                        <ListItemText\n                            primary={\n                                <IconButton>\n                                    <CloseIcon />\n                                </IconButton>\n                            }\n                        />\n                    </ListItem>\n                    <Divider />\n                    {\n                        [\n                            {\n                                text: 'My Data',\n                                path: '/myData',\n                                icon: <PersonIcon />,\n                            },\n                            {\n                                text: 'Report',\n                                path: '/report',\n                                icon: <BarChartIcon />,\n                            },\n                            // {\n                            //     text: 'Calculation',\n                            //     path: '/calculation',\n                            //     icon: <CalculateIcon />,\n                            // },\n                        ]\n                            .map(({ text, path, icon }) =>\n                                <ListItem\n                                    button\n                                    key={ text }\n                                    onClick={ () => history.push(path) }\n                                >\n                                    <ListItemIcon>\n                                        { icon }\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={ text }\n                                    />\n                                </ListItem>\n                            )\n                    }\n                </List>\n            </Box>\n        </Drawer>\n    </>\n}\n\nconst Nav = () => {\n    const small = !useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const dispatch = useDispatch()\n\n    const reset = useCallback(() => {\n        dispatch(CLEAR_MY_MODEL())\n        dispatch(CLEAR_RESULTS())\n        dispatch(CLEAR_APP_DATA())\n    }, [ dispatch ])\n\n    return <AppBar position=\"static\">\n        <Toolbar>\n            <NavBar { ...{ small } } />\n            <Typography\n                variant={ small ? 'h4' : 'h3' }\n                sx={ { flexGrow: 1, fontFamily: 'Monoton', margin: small ? '10px' : '20px' } }\n            >\n                RESSTAT\n            </Typography>\n            <Tooltip\n                placement=\"left\"\n                title={ <Typography>Download Data</Typography> }\n            >\n                <IconButton\n                    size={ small ? 'small' : 'large' }\n                    onClick={ downloadConfigurationAsJSON }\n                >\n                    <DownloadIcon />\n                </IconButton>\n            </Tooltip>\n            <Tooltip\n                placement=\"left\"\n                title={ <Typography>Clear Data</Typography> }\n            >\n                <IconButton\n                    size={ small ? 'small' : 'large' }\n                    onClick={ reset }\n                >\n                    <ReplayIcon />\n                </IconButton>\n            </Tooltip>\n        </Toolbar>\n    </AppBar>\n}\n\nexport default Nav"]},"metadata":{},"sourceType":"module"}