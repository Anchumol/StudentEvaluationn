{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digital\\\\Desktop\\\\accademic\\\\RESSTAT-main\\\\RESSTAT-main\\\\src\\\\pages\\\\LandingPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect\n/* useState */\n} from 'react'; // import IconButton from '@mui/material/IconButton'\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button'; // import Popover from '@mui/material/Popover'\n\nimport withStyles from '@mui/styles/withStyles';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight'; // import InfoIcon from '@mui/icons-material/Info'\n\nimport { useFilePicker } from 'use-file-picker';\nimport { useSnackbar } from 'notistack';\nimport { useDispatch } from 'react-redux';\nimport dataFile from '../../schemas/dataFile';\nimport { INIT_RESULTS } from '../../store/MyDataSlice';\nimport { INIT_MY_MODEL } from '../../store/MyModelSlice';\nimport { INIT_APP_DATA, LOGIN } from '../../store/AppDataSlice';\nimport { vh, vw } from '../../util/responsive'; // import styled from '@mui/material/styles/styled'\n// import Alert from '@mui/material/Alert'\n// import AlertTitle from '@mui/material/AlertTitle'\n\nimport GithubCorner from 'react-github-corner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyGrid = withStyles({\n  root: {\n    height: vh(100),\n    width: vw(100)\n  }\n}, {\n  name: 'MyGrid'\n})(Grid);\nconst MyInnerGrid = withStyles({\n  root: {\n    height: '75%',\n    minHeight: 300,\n    width: '80%',\n    maxWidth: 600\n  }\n}, {\n  name: 'MyInnerGrid'\n})(Grid); // const InfoDiv = styled('div')({\n//     position: 'fixed',\n//     bottom: 10,\n//     right: 10,\n// })\n\nconst LandingPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const small = !useMediaQuery(theme => theme.breakpoints.up('sm'));\n  const [openFilePicker, {\n    filesContent,\n    loading\n  }] = useFilePicker({\n    accept: '.json'\n  });\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // const [ anchorEl, setAnchorEl ] = useState(null)\n\n  const uploadDataFile = useCallback(jsonfileContent => {\n    dataFile.validate(JSON.parse(jsonfileContent)).then(value => {\n      dispatch(INIT_MY_MODEL(value.lrModel));\n      dispatch(INIT_RESULTS(value.results));\n      dispatch(INIT_APP_DATA(value.appData));\n    }).catch(err => enqueueSnackbar('Invalid Data File', {\n      variant: 'error',\n      preventDuplicate: true\n    }));\n  }, [dispatch, enqueueSnackbar]);\n  const startNew = useCallback(() => {\n    dispatch(LOGIN());\n    dispatch(INIT_RESULTS(dataFile.getDefaultFromShape().results));\n  }, [dispatch]);\n  useEffect(() => !loading && filesContent.length && uploadDataFile(filesContent[0].content), [loading, filesContent, uploadDataFile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyGrid, {\n      item: true,\n      container: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      xl: 12,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MyInnerGrid, {\n        item: true,\n        container: true,\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: small ? 'h2' : 'h1',\n            sx: {\n              fontFamily: 'Monoton'\n            },\n            children: \"RESSTAT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: small ? 'h6' : 'h5',\n            sx: {\n              textAlign: 'center'\n            },\n            children: [\"Dead Simple Result Analysis\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 52\n            }, this), \"For VTU Engineering Students\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              size: small ? \"medium\" : \"large\",\n              variant: \"outlined\",\n              endIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 39\n              }, this),\n              onClick: openFilePicker,\n              children: \"Upload Data File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 12,\n            md: 6,\n            lg: 6,\n            xl: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              disableElevation: true,\n              variant: \"contained\",\n              size: small ? \"medium\" : \"large\",\n              endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 39\n              }, this),\n              onClick: startNew,\n              children: \"Start New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GithubCorner, {\n      size: small ? 80 : 125,\n      octoColor: \"#121212\",\n      bannerColor: \"#FFFFFF\",\n      href: \"https://github.com/Mohammed-Aman-Khan/RESSTAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LandingPage, \"22hRSHd16Ba5k6xFb2tJkm/H2YU=\", false, function () {\n  return [useDispatch, useMediaQuery, useFilePicker, useSnackbar];\n});\n\n_c = LandingPage;\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["C:/Users/Digital/Desktop/accademic/RESSTAT-main/RESSTAT-main/src/pages/LandingPage/index.jsx"],"names":["useCallback","useEffect","Grid","Button","withStyles","Typography","useMediaQuery","UploadFileIcon","KeyboardArrowRightIcon","useFilePicker","useSnackbar","useDispatch","dataFile","INIT_RESULTS","INIT_MY_MODEL","INIT_APP_DATA","LOGIN","vh","vw","GithubCorner","MyGrid","root","height","width","name","MyInnerGrid","minHeight","maxWidth","LandingPage","dispatch","small","theme","breakpoints","up","openFilePicker","filesContent","loading","accept","enqueueSnackbar","uploadDataFile","jsonfileContent","validate","JSON","parse","then","value","lrModel","results","appData","catch","err","variant","preventDuplicate","startNew","getDefaultFromShape","length","content","fontFamily","textAlign"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, /* useState */ } from 'react'\n// import IconButton from '@mui/material/IconButton'\nimport Grid from '@mui/material/Grid'\nimport Button from '@mui/material/Button'\n// import Popover from '@mui/material/Popover'\nimport withStyles from '@mui/styles/withStyles'\nimport Typography from '@mui/material/Typography'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport UploadFileIcon from '@mui/icons-material/UploadFile'\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight'\n// import InfoIcon from '@mui/icons-material/Info'\nimport { useFilePicker } from 'use-file-picker'\nimport { useSnackbar } from 'notistack'\nimport { useDispatch } from 'react-redux'\nimport dataFile from '../../schemas/dataFile'\nimport { INIT_RESULTS } from '../../store/MyDataSlice'\nimport { INIT_MY_MODEL } from '../../store/MyModelSlice'\nimport { INIT_APP_DATA, LOGIN } from '../../store/AppDataSlice'\nimport { vh, vw } from '../../util/responsive'\n// import styled from '@mui/material/styles/styled'\n// import Alert from '@mui/material/Alert'\n// import AlertTitle from '@mui/material/AlertTitle'\nimport GithubCorner from 'react-github-corner'\n\nconst MyGrid = withStyles({\n    root: {\n        height: vh(100),\n        width: vw(100),\n    }\n}, { name: 'MyGrid' })(Grid)\nconst MyInnerGrid = withStyles({\n    root: {\n        height: '75%',\n        minHeight: 300,\n        width: '80%',\n        maxWidth: 600,\n    }\n}, { name: 'MyInnerGrid' })(Grid)\n// const InfoDiv = styled('div')({\n//     position: 'fixed',\n//     bottom: 10,\n//     right: 10,\n// })\n\nconst LandingPage = () => {\n    const dispatch = useDispatch()\n    const small = !useMediaQuery(theme => theme.breakpoints.up('sm'))\n    const [ openFilePicker, { filesContent, loading } ] = useFilePicker({ accept: '.json', })\n    const { enqueueSnackbar } = useSnackbar()\n    // const [ anchorEl, setAnchorEl ] = useState(null)\n\n    const uploadDataFile = useCallback(jsonfileContent => {\n        dataFile\n            .validate(JSON.parse(jsonfileContent))\n            .then(value => {\n                dispatch(INIT_MY_MODEL(value.lrModel))\n                dispatch(INIT_RESULTS(value.results))\n                dispatch(INIT_APP_DATA(value.appData))\n            })\n            .catch(err => enqueueSnackbar('Invalid Data File', { variant: 'error', preventDuplicate: true, }))\n    }, [ dispatch, enqueueSnackbar ])\n    const startNew = useCallback(() => {\n        dispatch(LOGIN())\n        dispatch(INIT_RESULTS(dataFile.getDefaultFromShape().results))\n    }, [ dispatch ])\n\n    useEffect(() => !loading && filesContent.length && uploadDataFile(filesContent[ 0 ].content), [ loading, filesContent, uploadDataFile ])\n\n    return <>\n        <MyGrid\n            item container\n            xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"row\"\n        >\n            <MyInnerGrid\n                item container\n                justifyContent=\"space-evenly\"\n                alignItems=\"center\"\n                direction=\"column\"\n            >\n                <Grid\n                    item\n                >\n                    <Typography\n                        variant={ small ? 'h2' : 'h1' }\n                        sx={ { fontFamily: 'Monoton' } }\n                    >\n                        RESSTAT\n                    </Typography>\n                </Grid>\n                <Grid\n                    item\n                >\n                    <Typography\n                        variant={ small ? 'h6' : 'h5' }\n                        sx={ { textAlign: 'center' } }\n                    >\n                        Dead Simple Result Analysis<br />For VTU Engineering Students\n                    </Typography>\n                </Grid>\n                <Grid\n                    item container\n                    spacing={ 2 }\n                >\n                    <Grid\n                        item\n                        xs={ 12 } sm={ 12 } md={ 6 } lg={ 6 } xl={ 6 }\n                    >\n                        <Button\n                            fullWidth\n                            size={ small ? \"medium\" : \"large\" }\n                            variant=\"outlined\"\n                            endIcon={ <UploadFileIcon /> }\n                            onClick={ openFilePicker }\n                        >\n                            Upload Data File\n                        </Button>\n                    </Grid>\n                    <Grid\n                        item\n                        xs={ 12 } sm={ 12 } md={ 6 } lg={ 6 } xl={ 6 }\n                    >\n                        <Button\n                            fullWidth\n                            disableElevation\n                            variant=\"contained\"\n                            size={ small ? \"medium\" : \"large\" }\n                            endIcon={ <KeyboardArrowRightIcon /> }\n                            onClick={ startNew }\n                        >\n                            Start New\n                        </Button>\n                    </Grid>\n                </Grid>\n            </MyInnerGrid>\n        </MyGrid>\n        {/* <InfoDiv>\n            <IconButton\n                size={ small ? 'small' : 'large' }\n                onClick={ e => setAnchorEl(e.currentTarget) }\n            >\n                <InfoIcon fontSize={ small ? 'medium' : 'large' } />\n            </IconButton>\n            <Popover\n                open={ Boolean(anchorEl) }\n                anchorEl={ anchorEl }\n                onClose={ () => setAnchorEl(null) }\n                anchorOrigin={ {\n                    vertical: 'top',\n                    horizontal: 'center',\n                } }\n                transformOrigin={ {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                } }\n            >\n                <Alert\n                    variant=\"outlined\"\n                    severity=\"info\"\n                >\n                    <AlertTitle>Note</AlertTitle>\n                    This website does not store its users' data in any form.<br />\n                    Everything is restricted within the session.<br />\n                </Alert>\n            </Popover>\n        </InfoDiv> */}\n        <GithubCorner\n            size={ small ? 80 : 125 }\n            octoColor=\"#121212\"\n            bannerColor=\"#FFFFFF\"\n            href=\"https://github.com/Mohammed-Aman-Khan/RESSTAT\"\n        />\n    </>\n}\n\nexport default LandingPage"]},"metadata":{},"sourceType":"module"}