{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport findIndex from 'lodash/findIndex';\nimport myModel from '../schemas/myModel';\nconst MyModelSlice = createSlice({\n  name: 'lrModel',\n  initialState: localStorage.lrModel ? JSON.parse(localStorage.lrModel) : myModel.getDefault(),\n  reducers: {\n    INIT_MY_MODEL: (state, action) => {\n      var _action$payload;\n\n      return (_action$payload = action.payload) !== null && _action$payload !== void 0 ? _action$payload : myModel.getDefault();\n    },\n    SET_INTERCEPT: (state, action) => {\n      let index = findIndex(state, {\n        credits: action.payload.credits\n      });\n      state[index].intercept = action.payload.value;\n      return state;\n    },\n    SET_COEFFICIENT: (state, action) => {\n      let index = findIndex(state, {\n        credits: action.payload.credits\n      });\n      state[index].coEfficient = action.payload.value;\n      return state;\n    },\n    CLEAR_MY_MODEL: (state, action) => myModel.getDefault()\n  }\n});\nexport const {\n  INIT_MY_MODEL,\n  SET_INTERCEPT,\n  SET_COEFFICIENT,\n  CLEAR_MY_MODEL\n} = MyModelSlice.actions;\nexport default MyModelSlice;","map":{"version":3,"sources":["C:/Users/Digital/Desktop/accademic/RESSTAT-main/RESSTAT-main/src/store/MyModelSlice.js"],"names":["createSlice","findIndex","myModel","MyModelSlice","name","initialState","localStorage","lrModel","JSON","parse","getDefault","reducers","INIT_MY_MODEL","state","action","payload","SET_INTERCEPT","index","credits","intercept","value","SET_COEFFICIENT","coEfficient","CLEAR_MY_MODEL","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,YAAY,GAAGH,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEC,YAAY,CAACC,OAAb,GAAuBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAxB,CAAvB,GAA0DL,OAAO,CAACQ,UAAR,EAF3C;AAG7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR;AAAA;;AAAA,gCAAmBA,MAAM,CAACC,OAA1B,6DAAqCb,OAAO,CAACQ,UAAR,EAArC;AAAA,KADT;AAENM,IAAAA,aAAa,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAIG,KAAK,GAAGhB,SAAS,CAACY,KAAD,EAAQ;AAAEK,QAAAA,OAAO,EAAEJ,MAAM,CAACC,OAAP,CAAeG;AAA1B,OAAR,CAArB;AACAL,MAAAA,KAAK,CAAEI,KAAF,CAAL,CAAeE,SAAf,GAA2BL,MAAM,CAACC,OAAP,CAAeK,KAA1C;AACA,aAAOP,KAAP;AACH,KANK;AAONQ,IAAAA,eAAe,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAIG,KAAK,GAAGhB,SAAS,CAACY,KAAD,EAAQ;AAAEK,QAAAA,OAAO,EAAEJ,MAAM,CAACC,OAAP,CAAeG;AAA1B,OAAR,CAArB;AACAL,MAAAA,KAAK,CAAEI,KAAF,CAAL,CAAeK,WAAf,GAA6BR,MAAM,CAACC,OAAP,CAAeK,KAA5C;AACA,aAAOP,KAAP;AACH,KAXK;AAYNU,IAAAA,cAAc,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmBZ,OAAO,CAACQ,UAAR;AAZ7B;AAHmB,CAAD,CAAhC;AAmBA,OAAO,MAAM;AACTE,EAAAA,aADS;AAETI,EAAAA,aAFS;AAGTK,EAAAA,eAHS;AAITE,EAAAA;AAJS,IAKTpB,YAAY,CAACqB,OALV;AAOP,eAAerB,YAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport findIndex from 'lodash/findIndex'\nimport myModel from '../schemas/myModel'\n\nconst MyModelSlice = createSlice({\n    name: 'lrModel',\n    initialState: localStorage.lrModel ? JSON.parse(localStorage.lrModel) : myModel.getDefault(),\n    reducers: {\n        INIT_MY_MODEL: (state, action) => action.payload ?? myModel.getDefault(),\n        SET_INTERCEPT: (state, action) => {\n            let index = findIndex(state, { credits: action.payload.credits })\n            state[ index ].intercept = action.payload.value\n            return state\n        },\n        SET_COEFFICIENT: (state, action) => {\n            let index = findIndex(state, { credits: action.payload.credits })\n            state[ index ].coEfficient = action.payload.value\n            return state\n        },\n        CLEAR_MY_MODEL: (state, action) => myModel.getDefault()\n    },\n})\n\nexport const {\n    INIT_MY_MODEL,\n    SET_INTERCEPT,\n    SET_COEFFICIENT,\n    CLEAR_MY_MODEL,\n} = MyModelSlice.actions\n\nexport default MyModelSlice"]},"metadata":{},"sourceType":"module"}