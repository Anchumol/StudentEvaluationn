{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digital\\\\Desktop\\\\accademic\\\\RESSTAT-main\\\\RESSTAT-main\\\\src\\\\pages\\\\MyData\\\\NewResultCard.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from '@mui/material/Button';\nimport styled from '@mui/material/styles/styled';\nimport { useCallback, useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Tooltip from '@mui/material/Tooltip';\nimport { formatString, toCapital, Semesters, withOrdSuffix } from '../../util/helper';\nimport { Typography } from '@mui/material';\nimport isEqual from 'lodash/isEqual';\nimport { useDispatch } from 'react-redux';\nimport { ADD_SEM_RESULT } from '../../store/MyDataSlice';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewResultPaper = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: 200,\n  width: '100%',\n  aspectRatio: '1/1',\n  borderRadius: 20,\n  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  transition: '0.3s',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    boxShadow: '0px 24px 48px -10px rgba(255, 255, 255, 0.2)'\n  }\n});\nconst initialNewSubject = {\n  subjectCode: '',\n  subjectName: '',\n  credits: null,\n  scoredMarks: null,\n  maxMarks: 100\n};\n\nconst NewResultCard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [openMainDialog, setOpenMainDialog] = useState(false);\n  const [openNewDialog, setOpenNewDialog] = useState(false);\n  const [semester, setSemester] = useState(null);\n  const [newSubject, setNewSubject] = useState({ ...initialNewSubject\n  });\n  const [subjects, setSubjects] = useState([]);\n  const openNewSubjectDialog = useCallback(() => {\n    setOpenMainDialog(false);\n    setOpenNewDialog(true);\n  }, [setOpenMainDialog, setOpenNewDialog]);\n  const closeNewSubjectDialog = useCallback(() => {\n    setOpenNewDialog(false);\n    setOpenMainDialog(true);\n  }, [setOpenMainDialog, setOpenNewDialog]);\n  const addSubject = useCallback(() => {\n    let newSub = {\n      subjectCode: formatString(newSubject.subjectCode),\n      subjectName: toCapital(formatString(newSubject.subjectName)),\n      credits: Number(newSubject.credits),\n      scoredMarks: Number(newSubject.scoredMarks),\n      maxMarks: Number(newSubject.maxMarks)\n    };\n\n    if (!newSub.subjectCode) {\n      enqueueSnackbar('Subject Code Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    if (!newSub.subjectName) {\n      enqueueSnackbar('Subject Name Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    if (!newSub.credits || isNaN(newSub.credits)) {\n      enqueueSnackbar('Credits Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    if (!newSub.scoredMarks) {\n      enqueueSnackbar('Scored Marks Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    if (!newSub.maxMarks) {\n      enqueueSnackbar('Max Marks Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    setSubjects(prev => [...prev, newSub]);\n    setOpenNewDialog(false);\n    setOpenMainDialog(true);\n    setNewSubject({ ...initialNewSubject\n    });\n  }, [enqueueSnackbar, newSubject, setSubjects]);\n  const removeSubject = useCallback(index => {\n    setSubjects(prev => [...prev].filter((elem, idx) => !isEqual(idx, index)));\n  }, [setSubjects]);\n  const addResults = useCallback(() => {\n    if (!semester) {\n      enqueueSnackbar('Semester is Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    if (!subjects.length) {\n      enqueueSnackbar('Subjects are Required', {\n        variant: 'error',\n        preventDuplicate: true\n      });\n      return;\n    }\n\n    dispatch(ADD_SEM_RESULT({\n      semester,\n      semResult: subjects\n    }));\n    setOpenMainDialog(false);\n    setSemester(null);\n    setSubjects([]);\n  }, [enqueueSnackbar, dispatch, semester, subjects, setOpenMainDialog]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Add New Semester Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(NewResultPaper, {\n        onClick: () => setOpenMainDialog(true),\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: true,\n      maxWidth: \"md\",\n      open: openMainDialog,\n      onClose: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Semester Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Semester\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            label: \"Semester\",\n            value: semester,\n            onChange: e => setSemester(e.target.value),\n            children: Semesters.map(sem => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: sem,\n              children: withOrdSuffix(sem)\n            }, sem, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: openNewSubjectDialog,\n                children: \"Add Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"Subject Code\"\n                }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"Subject Name\"\n                }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"Credits\"\n                }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"Scored Marks\"\n                }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"Max Marks\"\n                }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"\\xA0\"\n                }, void 0, false)].map((item, idx) => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    minWidth: 100\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 49\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: subjects.map(({\n                subjectCode,\n                subjectName,\n                credits,\n                scoredMarks,\n                maxMarks\n              }, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [[subjectCode, subjectName, credits, scoredMarks, maxMarks].map((item, idx) => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  sx: {\n                    minWidth: 100\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 61\n                  }, this)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 57\n                }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  onClick: () => removeSubject(index),\n                  children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 45\n                }, this)]\n              }, subjectCode, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setOpenMainDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disableElevation: true,\n          onClick: addResults,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: true,\n      maxWidth: \"sm\",\n      open: openNewDialog,\n      onClose: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"New Subject Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          name: \"subjectCode\",\n          label: \"Subject Code\",\n          value: newSubject.subjectCode,\n          onChange: e => setNewSubject(prev => ({ ...prev,\n            [e.target.name]: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          name: \"subjectName\",\n          label: \"Subject Name\",\n          value: newSubject.subjectName,\n          onChange: e => setNewSubject(prev => ({ ...prev,\n            [e.target.name]: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          name: \"credits\",\n          label: \"Credits\",\n          value: newSubject.credits,\n          onChange: e => setNewSubject(prev => ({ ...prev,\n            [e.target.name]: Number(e.target.value)\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          name: \"scoredMarks\",\n          label: \"Scored Marks\",\n          value: newSubject.scoredMarks,\n          onChange: e => setNewSubject(prev => ({ ...prev,\n            [e.target.name]: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"number\",\n          name: \"maxMarks\",\n          label: \"Max Marks\",\n          value: newSubject.maxMarks,\n          onChange: e => setNewSubject(prev => ({ ...prev,\n            [e.target.name]: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: closeNewSubjectDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          disableElevation: true,\n          onClick: addSubject,\n          children: \"Add Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewResultCard, \"2oZcZYqjs7gw2FAQVhUI6S5rA/g=\", false, function () {\n  return [useDispatch, useSnackbar];\n});\n\n_c = NewResultCard;\nexport default NewResultCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewResultCard\");","map":{"version":3,"sources":["C:/Users/Digital/Desktop/accademic/RESSTAT-main/RESSTAT-main/src/pages/MyData/NewResultCard.jsx"],"names":["Button","styled","useCallback","useState","AddIcon","HighlightOffIcon","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Paper","Tooltip","formatString","toCapital","Semesters","withOrdSuffix","Typography","isEqual","useDispatch","ADD_SEM_RESULT","useSnackbar","NewResultPaper","display","justifyContent","alignItems","minHeight","width","aspectRatio","borderRadius","backgroundColor","transition","cursor","boxShadow","initialNewSubject","subjectCode","subjectName","credits","scoredMarks","maxMarks","NewResultCard","dispatch","enqueueSnackbar","openMainDialog","setOpenMainDialog","openNewDialog","setOpenNewDialog","semester","setSemester","newSubject","setNewSubject","subjects","setSubjects","openNewSubjectDialog","closeNewSubjectDialog","addSubject","newSub","Number","variant","preventDuplicate","isNaN","prev","removeSubject","index","filter","elem","idx","addResults","length","semResult","e","preventDefault","target","value","map","sem","item","minWidth","border","name"],"mappings":"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","sourcesContent":["import Button from '@mui/material/Button'\nimport styled from '@mui/material/styles/styled'\nimport { useCallback, useState } from 'react'\nimport AddIcon from '@mui/icons-material/Add'\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogActions from '@mui/material/DialogActions'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport Select from '@mui/material/Select'\nimport MenuItem from '@mui/material/MenuItem'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TextField from '@mui/material/TextField'\nimport Paper from '@mui/material/Paper'\nimport Tooltip from '@mui/material/Tooltip'\nimport { formatString, toCapital, Semesters, withOrdSuffix } from '../../util/helper'\nimport { Typography } from '@mui/material'\nimport isEqual from 'lodash/isEqual'\nimport { useDispatch } from 'react-redux'\nimport { ADD_SEM_RESULT } from '../../store/MyDataSlice'\nimport { useSnackbar } from 'notistack'\n\nconst NewResultPaper = styled('div')({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n    width: '100%',\n    aspectRatio: '1/1',\n    borderRadius: 20,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    transition: '0.3s',\n    cursor: 'pointer',\n    '&:hover': {\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\n        boxShadow: '0px 24px 48px -10px rgba(255, 255, 255, 0.2)',\n    },\n})\n\nconst initialNewSubject = {\n    subjectCode: '',\n    subjectName: '',\n    credits: null,\n    scoredMarks: null,\n    maxMarks: 100,\n}\n\nconst NewResultCard = () => {\n    const dispatch = useDispatch()\n    const { enqueueSnackbar } = useSnackbar()\n    const [ openMainDialog, setOpenMainDialog ] = useState(false)\n    const [ openNewDialog, setOpenNewDialog ] = useState(false)\n    const [ semester, setSemester ] = useState(null)\n    const [ newSubject, setNewSubject ] = useState({ ...initialNewSubject })\n    const [ subjects, setSubjects ] = useState([])\n\n    const openNewSubjectDialog = useCallback(() => {\n        setOpenMainDialog(false)\n        setOpenNewDialog(true)\n    }, [ setOpenMainDialog, setOpenNewDialog ])\n    const closeNewSubjectDialog = useCallback(() => {\n        setOpenNewDialog(false)\n        setOpenMainDialog(true)\n    }, [ setOpenMainDialog, setOpenNewDialog ])\n    const addSubject = useCallback(() => {\n        let newSub = {\n            subjectCode: formatString(newSubject.subjectCode),\n            subjectName: toCapital(formatString(newSubject.subjectName)),\n            credits: Number(newSubject.credits),\n            scoredMarks: Number(newSubject.scoredMarks),\n            maxMarks: Number(newSubject.maxMarks),\n        }\n\n        if (!newSub.subjectCode) {\n            enqueueSnackbar('Subject Code Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n        if (!newSub.subjectName) {\n            enqueueSnackbar('Subject Name Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n        if (!newSub.credits || isNaN(newSub.credits)) {\n            enqueueSnackbar('Credits Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n        if (!newSub.scoredMarks) {\n            enqueueSnackbar('Scored Marks Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n        if (!newSub.maxMarks) {\n            enqueueSnackbar('Max Marks Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n\n        setSubjects(prev => [ ...prev, newSub ])\n        setOpenNewDialog(false)\n        setOpenMainDialog(true)\n        setNewSubject({ ...initialNewSubject })\n    }, [ enqueueSnackbar, newSubject, setSubjects ])\n    const removeSubject = useCallback(index => {\n        setSubjects(prev => [ ...prev ].filter((elem, idx) => !isEqual(idx, index)))\n    }, [ setSubjects ])\n    const addResults = useCallback(() => {\n        if (!semester) {\n            enqueueSnackbar('Semester is Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n        if (!subjects.length) {\n            enqueueSnackbar('Subjects are Required', { variant: 'error', preventDuplicate: true })\n            return\n        }\n\n        dispatch(ADD_SEM_RESULT({ semester, semResult: subjects, }))\n        setOpenMainDialog(false)\n        setSemester(null)\n        setSubjects([])\n    }, [ enqueueSnackbar, dispatch, semester, subjects, setOpenMainDialog ])\n\n    return <>\n        <Tooltip\n            arrow\n            placement=\"top\"\n            title={ <Typography>Add New Semester Results</Typography> }\n        >\n            <NewResultPaper\n                onClick={ () => setOpenMainDialog(true) }\n            >\n                <AddIcon\n                    fontSize=\"large\"\n                />\n            </NewResultPaper>\n        </Tooltip>\n        <Dialog\n            fullWidth\n            maxWidth=\"md\"\n            open={ openMainDialog }\n            onClose={ e => e.preventDefault() }\n        >\n            <DialogTitle>Add New Semester Results</DialogTitle>\n            <DialogContent>\n                <br />\n                <FormControl fullWidth>\n                    <InputLabel>Semester</InputLabel>\n                    <Select\n                        label=\"Semester\"\n                        value={ semester }\n                        onChange={ e => setSemester(e.target.value) }\n                    >\n                        {\n                            Semesters\n                                .map(sem =>\n                                    <MenuItem\n                                        key={ sem }\n                                        value={ sem }\n                                    >\n                                        { withOrdSuffix(sem) }\n                                    </MenuItem>\n                                )\n                        }\n                    </Select>\n                </FormControl>\n                <br /><br />\n                <TableContainer component={ Paper }>\n                    <Table sx={ { width: '100%' } }>\n                        <caption>\n                            <Button\n                                variant=\"outlined\"\n                                onClick={ openNewSubjectDialog }\n                            >\n                                Add Subject\n                            </Button>\n                        </caption>\n                        <TableHead>\n                            <TableRow>\n                                {\n                                    [\n                                        <>Subject Code</>,\n                                        <>Subject Name</>,\n                                        <>Credits</>,\n                                        <>Scored Marks</>,\n                                        <>Max Marks</>,\n                                        <>&nbsp;</>\n                                    ]\n                                        .map((item, idx) =>\n                                            <TableCell\n                                                key={ idx }\n                                                align=\"center\"\n                                                sx={ { minWidth: 100 } }\n                                            >\n                                                <Typography variant=\"caption\">\n                                                    { item }\n                                                </Typography>\n                                            </TableCell>\n                                        )\n                                }\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                subjects\n                                    .map(({ subjectCode, subjectName, credits, scoredMarks, maxMarks }, index) =>\n                                        <TableRow\n                                            key={ subjectCode }\n                                            sx={ { '&:last-child td, &:last-child th': { border: 0 } } }\n                                        >\n                                            {\n                                                [ subjectCode, subjectName, credits, scoredMarks, maxMarks ]\n                                                    .map((item, idx) =>\n                                                        <TableCell\n                                                            key={ idx }\n                                                            align=\"center\"\n                                                            sx={ { minWidth: 100 } }\n                                                        >\n                                                            <Typography variant=\"caption\">\n                                                                { item }\n                                                            </Typography>\n                                                        </TableCell>\n                                                    )\n                                            }\n                                            <TableCell\n                                                align=\"center\"\n                                                onClick={ () => removeSubject(index) }\n                                            >\n                                                <HighlightOffIcon />\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"outlined\"\n                    onClick={ () => setOpenMainDialog(false) }\n                >\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={ addResults }\n                >\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={ openNewDialog }\n            onClose={ e => e.preventDefault() }\n        >\n            <DialogTitle>New Subject Details</DialogTitle>\n            <DialogContent>\n                <br />\n                <TextField\n                    fullWidth\n                    name=\"subjectCode\"\n                    label=\"Subject Code\"\n                    value={ newSubject.subjectCode }\n                    onChange={ e => setNewSubject(prev => ({ ...prev, [ e.target.name ]: e.target.value })) }\n                />\n                <br /><br />\n                <TextField\n                    fullWidth\n                    name=\"subjectName\"\n                    label=\"Subject Name\"\n                    value={ newSubject.subjectName }\n                    onChange={ e => setNewSubject(prev => ({ ...prev, [ e.target.name ]: e.target.value })) }\n                />\n                <br /><br />\n                <TextField\n                    fullWidth\n                    type=\"number\"\n                    name=\"credits\"\n                    label=\"Credits\"\n                    value={ newSubject.credits }\n                    onChange={ e => setNewSubject(prev => ({ ...prev, [ e.target.name ]: Number(e.target.value) })) }\n                />\n                <br /><br />\n                <TextField\n                    fullWidth\n                    type=\"number\"\n                    name=\"scoredMarks\"\n                    label=\"Scored Marks\"\n                    value={ newSubject.scoredMarks }\n                    onChange={ e => setNewSubject(prev => ({ ...prev, [ e.target.name ]: e.target.value })) }\n                />\n                <br /><br />\n                <TextField\n                    fullWidth\n                    type=\"number\"\n                    name=\"maxMarks\"\n                    label=\"Max Marks\"\n                    value={ newSubject.maxMarks }\n                    onChange={ e => setNewSubject(prev => ({ ...prev, [ e.target.name ]: e.target.value })) }\n                />\n                <br />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"outlined\"\n                    onClick={ closeNewSubjectDialog }\n                >\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={ addSubject }\n                >\n                    Add Subject\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </>\n}\n\nexport default NewResultCard"]},"metadata":{},"sourceType":"module"}