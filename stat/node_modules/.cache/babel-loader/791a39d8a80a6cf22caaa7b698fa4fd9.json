{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport filter from 'lodash/filter';\nimport isEqual from 'lodash/isEqual';\nimport findIndex from 'lodash/findIndex';\nimport results from '../schemas/results';\nconst MyDataSlice = createSlice({\n  name: 'results',\n  initialState: localStorage.results ? JSON.parse(localStorage.results) : results.getDefault(),\n  reducers: {\n    INIT_RESULTS: (state, action) => action.payload,\n    ADD_SEM_RESULT: (state, action) => {\n      state.push(action.payload);\n      return state;\n    },\n    DELETE_SEM_RESULT: (state, action) => {\n      state = filter(state, i => !isEqual(i.semester, action.payload.semester));\n      return state;\n    },\n    EDIT_SEM_RESULT: (state, action) => {\n      let index = findIndex(state, {\n        sem: action.payload.semester\n      });\n      state[index] = {\n        semester: action.payload.semester,\n        semResult: action.payload.newResult\n      };\n      return state;\n    },\n    CLEAR_RESULTS: (state, action) => results.getDefault()\n  }\n});\nexport const {\n  INIT_RESULTS,\n  ADD_SEM_RESULT,\n  DELETE_SEM_RESULT,\n  EDIT_SEM_RESULT,\n  CLEAR_RESULTS\n} = MyDataSlice.actions;\nexport default MyDataSlice;","map":{"version":3,"sources":["C:/Users/Digital/Desktop/accademic/RESSTAT-main/RESSTAT-main/src/store/MyDataSlice.js"],"names":["createSlice","filter","isEqual","findIndex","results","MyDataSlice","name","initialState","localStorage","JSON","parse","getDefault","reducers","INIT_RESULTS","state","action","payload","ADD_SEM_RESULT","push","DELETE_SEM_RESULT","i","semester","EDIT_SEM_RESULT","index","sem","semResult","newResult","CLEAR_RESULTS","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,WAAW,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,SADsB;AAE5BC,EAAAA,YAAY,EAAEC,YAAY,CAACJ,OAAb,GAAuBK,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACJ,OAAxB,CAAvB,GAA0DA,OAAO,CAACO,UAAR,EAF5C;AAG5BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADlC;AAENC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACC,OAAlB;AACA,aAAOF,KAAP;AACH,KALK;AAMNK,IAAAA,iBAAiB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,GAAGb,MAAM,CAACa,KAAD,EAAQM,CAAC,IAAI,CAAClB,OAAO,CAACkB,CAAC,CAACC,QAAH,EAAaN,MAAM,CAACC,OAAP,CAAeK,QAA5B,CAArB,CAAd;AACA,aAAOP,KAAP;AACH,KATK;AAUNQ,IAAAA,eAAe,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAIQ,KAAK,GAAGpB,SAAS,CAACW,KAAD,EAAQ;AAAEU,QAAAA,GAAG,EAAET,MAAM,CAACC,OAAP,CAAeK;AAAtB,OAAR,CAArB;AACAP,MAAAA,KAAK,CAAES,KAAF,CAAL,GAAiB;AACbF,QAAAA,QAAQ,EAAEN,MAAM,CAACC,OAAP,CAAeK,QADZ;AAEbI,QAAAA,SAAS,EAAEV,MAAM,CAACC,OAAP,CAAeU;AAFb,OAAjB;AAIA,aAAOZ,KAAP;AACH,KAjBK;AAkBNa,IAAAA,aAAa,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmBX,OAAO,CAACO,UAAR;AAlB5B;AAHkB,CAAD,CAA/B;AAyBA,OAAO,MAAM;AACTE,EAAAA,YADS;AAETI,EAAAA,cAFS;AAGTE,EAAAA,iBAHS;AAITG,EAAAA,eAJS;AAKTK,EAAAA;AALS,IAMTtB,WAAW,CAACuB,OANT;AAQP,eAAevB,WAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport filter from 'lodash/filter'\nimport isEqual from 'lodash/isEqual'\nimport findIndex from 'lodash/findIndex'\nimport results from '../schemas/results'\n\nconst MyDataSlice = createSlice({\n    name: 'results',\n    initialState: localStorage.results ? JSON.parse(localStorage.results) : results.getDefault(),\n    reducers: {\n        INIT_RESULTS: (state, action) => action.payload,\n        ADD_SEM_RESULT: (state, action) => {\n            state.push(action.payload)\n            return state\n        },\n        DELETE_SEM_RESULT: (state, action) => {\n            state = filter(state, i => !isEqual(i.semester, action.payload.semester))\n            return state\n        },\n        EDIT_SEM_RESULT: (state, action) => {\n            let index = findIndex(state, { sem: action.payload.semester })\n            state[ index ] = {\n                semester: action.payload.semester,\n                semResult: action.payload.newResult,\n            }\n            return state\n        },\n        CLEAR_RESULTS: (state, action) => results.getDefault()\n    },\n})\n\nexport const {\n    INIT_RESULTS,\n    ADD_SEM_RESULT,\n    DELETE_SEM_RESULT,\n    EDIT_SEM_RESULT,\n    CLEAR_RESULTS,\n} = MyDataSlice.actions\n\nexport default MyDataSlice"]},"metadata":{},"sourceType":"module"}