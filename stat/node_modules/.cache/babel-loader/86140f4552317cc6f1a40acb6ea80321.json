{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digital\\\\Desktop\\\\student eva\\\\studentEvaluation\\\\stat\\\\src\\\\pages\\\\Report\\\\PredictionReport.jsx\",\n    _s = $RefreshSig$();\n\nimport map from 'lodash/map';\nimport useRegression from '../../hooks/useRegression';\nimport { useSelector } from 'react-redux';\nimport styled from '@mui/material/styles/styled';\nimport Typography from '@mui/material/Typography';\nimport { ResponsiveContainer, ComposedChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, Bar } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyDiv = styled('div')({\n  maxHeight: '100%',\n  minHeight: 200,\n  minWidth: 200,\n  borderRadius: 10,\n  padding: 10,\n  width: '100%',\n  aspectRatio: '1/1',\n  display: 'flex',\n  flexDirection: 'column',\n  border: '1px solid rgba(255, 255, 255, 0.5)'\n});\nconst MyPaper = styled('div')({\n  padding: 10,\n  backgroundColor: 'white',\n  maxHeight: '100%',\n  minHeight: 200,\n  minWidth: 200,\n  borderRadius: 10,\n  flexGrow: 1\n});\n\nconst PredictionReport = () => {\n  _s();\n\n  var _useSelector;\n\n  const lrModel = (_useSelector = useSelector(state => state.lrModel)) !== null && _useSelector !== void 0 ? _useSelector : [];\n  const {\n    predict\n  } = useRegression();\n  return /*#__PURE__*/_jsxDEV(MyDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Predicted Scores (Credit based)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyPaper, {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n          data: map(lrModel, i => ({\n            'Predicted Score': predict(i.credits),\n            name: `Credit ${i.credits} Subject`,\n            'Prediction Accuracy %': i.accuracy\n          })),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#ccc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"Predicted Score\",\n            barSize: 20,\n            fill: \"#EC407A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"Prediction Accuracy %\",\n            stroke: \"#81C784\",\n            strokeWidth: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PredictionReport, \"j/FRhrCYBJv6s4T+0wbt/gr6Utk=\", false, function () {\n  return [useSelector, useRegression];\n});\n\n_c = PredictionReport;\nexport default PredictionReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictionReport\");","map":{"version":3,"sources":["C:/Users/Digital/Desktop/student eva/studentEvaluation/stat/src/pages/Report/PredictionReport.jsx"],"names":["map","useRegression","useSelector","styled","Typography","ResponsiveContainer","ComposedChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","Bar","MyDiv","maxHeight","minHeight","minWidth","borderRadius","padding","width","aspectRatio","display","flexDirection","border","MyPaper","backgroundColor","flexGrow","PredictionReport","lrModel","state","predict","i","credits","name","accuracy"],"mappings":"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","sourcesContent":["import map from 'lodash/map'\nimport useRegression from '../../hooks/useRegression'\nimport { useSelector } from 'react-redux'\nimport styled from '@mui/material/styles/styled'\nimport Typography from '@mui/material/Typography'\nimport { ResponsiveContainer, ComposedChart, CartesianGrid, XAxis, YAxis, Tooltip, Line, Bar, } from 'recharts'\n\nconst MyDiv = styled('div')({\n    maxHeight: '100%',\n    minHeight: 200,\n    minWidth: 200,\n    borderRadius: 10,\n    padding: 10,\n    width: '100%',\n    aspectRatio: '1/1',\n    display: 'flex',\n    flexDirection: 'column',\n    border: '1px solid rgba(255, 255, 255, 0.5)',\n})\nconst MyPaper = styled('div')({\n    padding: 10,\n    backgroundColor: 'white',\n    maxHeight: '100%',\n    minHeight: 200,\n    minWidth: 200,\n    borderRadius: 10,\n    flexGrow: 1,\n})\n\nconst PredictionReport = () => {\n    const lrModel = useSelector(state => state.lrModel) ?? []\n    const { predict } = useRegression()\n\n    return <MyDiv>\n        <Typography>\n            Predicted Scores (Credit based)\n        </Typography>\n        <br />\n        <MyPaper>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart data={ map(lrModel, i => ({ 'Predicted Score': predict(i.credits), name: `Credit ${ i.credits } Subject`, 'Prediction Accuracy %': i.accuracy })) }>\n                    <CartesianGrid stroke=\"#ccc\" />\n                    <XAxis dataKey=\"name\" />\n                    <Bar dataKey=\"Predicted Score\" barSize={ 20 } fill=\"#EC407A\" />\n                    <Line type=\"monotone\" dataKey=\"Prediction Accuracy %\" stroke=\"#81C784\" strokeWidth={ 5 } />\n                    <YAxis />\n                    <Tooltip />\n                </ComposedChart>\n            </ResponsiveContainer>\n        </MyPaper>\n    </MyDiv>\n}\n\nexport default PredictionReport"]},"metadata":{},"sourceType":"module"}